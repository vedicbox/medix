services:
  backend:
    build: ./backend
    restart: always
    depends_on:
      - mongo
    environment:
      - NODE_ENV=production
      - PORT=4000
      - DATABASE_URL=mongodb://admin:password@mongo:27017/vedicdb?authSource=admin
    networks:
      - app-network

  frontend:
    build: ./frontend
    restart: always
    depends_on:
      - backend
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email your-email@example.com -d vedicmedix.in -d www.vedicmedix.in --agree-tos --non-interactive
    depends_on:
      - nginx
    networks:
      - app-network

  mongo:
    image: mongo:7
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongodb_prod:/data/db
    networks:
      - app-network
    # No ports exposed - only accessible within Docker network

  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    restart: always
    # No ports exposed in production - only accessible via nginx if needed
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_prod: 